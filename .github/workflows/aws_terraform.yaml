name: Terraform steps AWS
on:
  workflow_call:
    inputs:
      ### Terraform ###
      base_path:
        default: "./terraform"
        type: string
        required: false
        description: "Base path to terraform folder"
      workspace:
        type: string
        required: true
        description: "Workspace to run terraform on"
      plan_only:
        default: false
        type: boolean
        required: false
        description: "If true runs only plan"
      terraform_version:
        default: '1.2.5'
        type: string
        required: false
        description: "Terraform version"
      tfvars_dir:
        default: ''
        type: string
        required: false
        description: "Terraform tfvars directory to be copied"
      ### AWS Section ###
      role_arn:
        type: string
        required: true
      aws_region:
        type: string
        required: true
jobs:
  make_dir_list:
    name: "Get list of terraform directories"
    runs-on: ubuntu-latest
    environment: ${{inputs.environment}}
    outputs:
      directories: ${{steps.list.outputs.list}}
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v2
      - name: Construct dir list
        id: list
        run: |
          cd ${{inputs.base_path}}
          for step in ./*; do
          if [ "$step" == "./GLOBAL" ]; then
              continue
          fi
          if [ -n "$result" ]; then
          result="$result,"
          fi
          result="$result\"$step\""
          done
          
          echo "$result"
          echo ::set-output name=list::"{\"terraform-dir\":[$result]}"
  plan:
    if: ${{inputs.plan_only}}
    needs:
      - make_dir_list
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    strategy:
      max-parallel: 1
      matrix: ${{fromJson(needs.make_dir_list.outputs.directories)}}
    concurrency: "terraform"
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ inputs.role_arn }}
          aws-region: ${{ inputs.aws_region }}
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{inputs.terraform_version}}
      - name: Plan Terraform
        working-directory: ${{inputs.base_path}}/${{matrix.terraform-dir}}
        run: |
          cp -a ../GLOBAL/SHARED/ ./
          if [ -n "${{inputs.tfvars_dir}}" ]; then
             cp -a ../GLOBAL/${{inputs.tfvars_dir}}/ ./
          fi
          terraform init
          terraform workspace select ${{inputs.workspace}} || terraform workspace new ${{inputs.workspace}}
          terraform plan -input=false -var-file=../GLOBAL/shared.tfvars
  apply:
    if: ${{!inputs.plan_only}}
    needs:
      - make_dir_list
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    strategy:
      max-parallel: 1
      matrix: ${{fromJson(needs.make_dir_list.outputs.directories)}}
    concurrency: "terraform"
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ inputs.role_arn }}
          aws-region: ${{ inputs.aws_region }}
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{inputs.terraform_version}}
      - name: Apply Terraform
        working-directory: ${{inputs.base_path}}/${{matrix.terraform-dir}}
        run: |
          cp -a ../GLOBAL/SHARED/ ./
          if [ -n "${{inputs.tfvars_dir}}" ]; then
             cp -a ../GLOBAL/${{inputs.tfvars_dir}}/ ./
          fi
          terraform init
          terraform workspace select ${{inputs.workspace}} || terraform workspace new ${{inputs.workspace}}
          terraform apply -input=false -auto-approve -var-file=../GLOBAL/shared.tfvars