name: Publish docker image to ECR
on:
  workflow_call:
    inputs:
      ### Terraform ###
      directories:
        type: string
        required: true
        description: "Json encoded string of directories with key terraform-dir"
      workspace:
        type: string
        required: true
        description: "Workspace to run terraform on"
      plan_only:
        default: false
        type: boolean
        description: "If true runs only plan"
      ### Generic Variables ###
      service_name:
        default: 'unamed_service'
        type: string
        description: 'Passed to terraform as SERVICE_NAME'
    secrets:
      ### MongoDB Section ###
      mongo_org_id:
        required: false
      mongo_sa_id:
        required: false
      mongo_sa_pwd:
        required: false
      mongo_public_key:
        required: false
      mongo_private_key:
        required: false
      ### AWS Section ###
      role_arn:
        required: true
      aws_account_id:
        required: true
      aws_region:
        required: true
jobs:
  plan:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    strategy:
      max-parallel: 1
      matrix: ${{fromJson(inputs.directories)}}
    concurrency: "terraform"
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.role_arn }}
          aws-region: ${{ secrets.aws_region }}
      - uses: hashicorp/setup-terraform@v1
      - name: Plan Terraform
        working-directory: ./terraform/${{matrix.terraform-dir}}
        env:
          TF_VAR_SERVICE_NAME: ${{secrets.service_name}}
          TF_VAR_MONGO_ORG_ID: ${{secrets.mongo_org_id}}
          TF_VAR_MONGO_SA_ID: ${{secrets.mongo_sa_id}}
          TF_VAR_MONGO_SA_PWD: ${{secrets.mongo_sa_pwd}}
          MONGODB_ATLAS_PUBLIC_KEY: ${{secrets.mongo_public_key}}
          MONGODB_ATLAS_PRIVATE_KEY: ${{secrets.mongo_private_key}}
        run: |
          terraform init
          terraform workspace select ${{inputs.workspace}} || terraform workspace new ${{inputs.workspace}}
          terraform plan -input=false
  apply:
    if: ${{!inputs.plan_only}}
    needs: [ 'plan' ]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    strategy:
      max-parallel: 1
      matrix: ${{fromJson(inputs.directories)}}
    concurrency: "terraform"
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.role_arn }}
          aws-region: ${{ secrets.aws_region }}
      - uses: hashicorp/setup-terraform@v1
      - name: Plan Terraform
        working-directory: ./terraform/${{matrix.terraform-dir}}
        env:
          TF_VAR_SERVICE_NAME: ${{secrets.service_name}}
          TF_VAR_MONGO_ORG_ID: ${{secrets.mongo_org_id}}
          TF_VAR_MONGO_SA_ID: ${{secrets.mongo_sa_id}}
          TF_VAR_MONGO_SA_PWD: ${{secrets.mongo_sa_pwd}}
          MONGODB_ATLAS_PUBLIC_KEY: ${{secrets.mongo_public_key}}
          MONGODB_ATLAS_PRIVATE_KEY: ${{secrets.mongo_private_key}}
        run: |
          terraform init
          terraform workspace select ${{inputs.workspace}} || terraform workspace new ${{inputs.workspace}}
          terraform apply -input=false -auto-approve