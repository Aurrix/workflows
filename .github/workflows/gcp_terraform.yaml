name: Terraform steps GCP
on:
  workflow_call:
    inputs:
      ### Terraform ###
      directories:
        type: string
        required: true
        description: "Json encoded string of directories with key terraform-dir"
      base_path:
        default: "./terraform"
        type: string
        required: false
        description: "Base path to terraform folder"
      workspace:
        type: string
        required: true
        description: "Workspace to run terraform on"
      plan_only:
        default: false
        type: boolean
        required: false
        description: "If true runs only plan"
      ### GCP ###
      pool_name:
        default: 'github'
        type: string
        required: false
        description: "GCP Workload Identity Pool Name"
      provider_name:
        default: 'github'
        type: string
        required: false
        description: "GCP Workload Identity Pool Provider Name"
      service_account:
        required: true
        type: string
      project_id:
        required: true
        type: string
    secrets:
      ### MongoDB Section ###
      mongo_public_key:
        required: false
      mongo_private_key:
        required: false
jobs:
  plan:
    if: ${{inputs.plan_only}}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    strategy:
      max-parallel: 1
      matrix: ${{fromJson(inputs.directories)}}
    concurrency: "terraform"
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v2
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: projects/${{inputs.project_id}}/locations/global/workloadIdentityPools/${{inputs.pool_name}}/providers/${{inputs.provider_name}}
          service_account: ${{inputs.service_account}}
          token_format: 'access_token'
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.8
      - name: Plan Terraform
        working-directory: ${{inputs.base_path}}/${{matrix.terraform-dir}}
        env:
          MONGODB_ATLAS_PUBLIC_KEY: ${{secrets.mongo_public_key}}
          MONGODB_ATLAS_PRIVATE_KEY: ${{secrets.mongo_private_key}}
        run: |
          terraform init
          terraform workspace select ${{inputs.workspace}} || terraform workspace new ${{inputs.workspace}}
          terraform plan -input=false
  apply:
    if: ${{!inputs.plan_only}}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    strategy:
      max-parallel: 1
      matrix: ${{fromJson(inputs.directories)}}
    concurrency: "terraform"
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v2
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: projects/${{inputs.project_id}}/locations/global/workloadIdentityPools/${{inputs.pool_name}}/providers/${{inputs.provider_name}}
          service_account: ${{inputs.service_account}}
          token_format: 'access_token'
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.8
      - name: Apply Terraform
        working-directory: ${{inputs.base_path}}/${{matrix.terraform-dir}}
        env:
          MONGODB_ATLAS_PUBLIC_KEY: ${{secrets.mongo_public_key}}
          MONGODB_ATLAS_PRIVATE_KEY: ${{secrets.mongo_private_key}}
        run: |
          terraform init
          terraform workspace select ${{inputs.workspace}} || terraform workspace new ${{inputs.workspace}}
          terraform apply -input=false -auto-approve